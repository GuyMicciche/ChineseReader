name: Sync to Azure DevOps

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Manual trigger button

jobs:
  sync:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history
    
    - name: Create Repository via REST API
      env:
        AZURE_DEVOPS_PAT: ${{ secrets.AZURE_DEVOPS_PAT }}
      run: |
        # Get repository info from GitHub
        REPO_NAME="${{ github.event.repository.name }}"
        REPO_DESC="${{ github.event.repository.description }}"
        PROJECT="DefaultCollection"  # Change this to your project name if different
        ORG="guymicciche"
        
        # Check if repository exists using REST API
        RESPONSE=$(curl -s -w "\n%{http_code}" \
          -H "Authorization: Basic $(echo -n :$AZURE_DEVOPS_PAT | base64)" \
          "https://dev.azure.com/$ORG/$PROJECT/_apis/git/repositories/$REPO_NAME?api-version=7.0")
        
        HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
        
        if [ "$HTTP_CODE" = "404" ]; then
          echo "Creating repository: $REPO_NAME"
          
          # Create repository using REST API
          curl -X POST \
            -H "Authorization: Basic $(echo -n :$AZURE_DEVOPS_PAT | base64)" \
            -H "Content-Type: application/json" \
            -d "{\"name\": \"$REPO_NAME\", \"project\": {\"id\": \"$PROJECT\"}}" \
            "https://dev.azure.com/$ORG/$PROJECT/_apis/git/repositories?api-version=7.0" \
            || echo "Note: Repository might already exist or will be created on first push"
          
          echo "✅ Repository creation attempted: $REPO_NAME"
        else
          echo "Repository $REPO_NAME already exists or will be created on push"
        fi
    
    - name: Sync to Azure DevOps
      env:
        AZURE_DEVOPS_PAT: ${{ secrets.AZURE_DEVOPS_PAT }}
      run: |
        # Get repository name from GitHub
        REPO_NAME="${{ github.event.repository.name }}"
        PROJECT="DefaultCollection"  # Change this to your project name if different
        
        # Configure git
        git config --global user.email "actions@github.com"
        git config --global user.name "GitHub Actions"
        
        # Add Azure DevOps remote using the same repository name
        git remote add azure https://$AZURE_DEVOPS_PAT@dev.azure.com/guymicciche/$PROJECT/_git/$REPO_NAME
        
        # Push to Azure DevOps (this will create the repo if it doesn't exist)
        git push azure --all --force
        git push azure --tags --force
        
        echo "✅ Synced $REPO_NAME to Azure DevOps"
